0 GUI MANIPULATION > BASIC OPERATION > MESSAGES > INTERNAL MESSAGES > OVERLAY > MORE >;
0 RE-SIZING CONTEXT RE-SIZING MESSAGE BOX USING TOGGLE FLOATS ZOOMING SYMBOL SCROLLING MORE >;
0 STARTING AND STOPPING PATTERN AND BURST > CONNECTING CONTEXTS > RECEIVEING MESSAGES > TIMING > **;
0 SEPARATORS > VARIABLES > FUNCTIONS > RELATIVE MESSAGES > OTHER > **;
;
;
0 ID > SAFETY CONDITIONAL INPUT > BANK > MESSAGE BUFFER > MORE >;
1 RE-SIZING CONTEXT :: Hold down the Shift key and click + drag just outside of the Context you want to resize. The selectable area is exactly one toggle box outside of the Context abstraction. Use Control instead of Shift and the time duration will increase or decrease with the size.;
1 RE-SIZING MESSAGE BOX :: Hold down the shift key and click + drag just to on the right edge of the message box.;
1 TOGGLE FLOATS :: Double click + hold on any toggle and drag up or down. Positive toggle floats are virtual cable connections. Negative floats are interpreted my the send message (variable =).;
1 ZOOMING :: Hold down the Shift key and double click + drag just outside of the Context you want to resize. The selectable area is exactly one toggle box outside of the Context abstraction. Use Control instead of Shift and the time duration will increase or decrease with the size.;
1 SYMBOL SCROLLING :: Double click + hold on the message send (symbol box) and scroll up or down to increase or decrease a float in the send message. Double clicking will affect the first float in the message. Tripple clicking the second float etc.;
0 STARTING AND STOPPING SWITCHING AXES EDIT SEND MESSAGE ** ** **;
1 STARTING AND STOPPING :: Double click on the Context canvas to start it. Click and hold to stop. You can also send the messages "start" and "stop" to Context.;
0 PATTERN BURST SETTING TOGGLES SWITCHING AXES BURST SETTINGS > **;
0 CABLE CONNECTIONS FLOAT CONNECT EXTERNAL CONNECTIONS ** ** **;
0 RECEIVING SENDING TAGS ** ** **;
0 TIME CYCLE COEFFICIENT RANDOM > POSITIONAL > ** **;
;
0 > | & ** ** **;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
0 ID NUMBERS TAGS COLOURS ** ** **;
1 SAFETY :: By default a Context cannot have a cycle of less than 10 mili-seconds. This is to prevent stack overflows in case a Context is connected to itself or otherwise enters a feedback loop. But sometimes it is useful to have a Context with 0 time (ie. when using the burst as a logic gate.) In this case you can turn the "safety" setting off in the properties menu. But watch out for stack overflows!;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
2 13;
1 SWITCHING AXES :: Shift and double click on the number atom. This will switch the "burst" and "pattern" toggles between the X and Y axes.;
1 EDIT SEND MESSAGE :: Shift and double click on the symbol atom. You can then edit the send message and press Return when done.;
;
;
;
;
;
;
;
;
;
1 PATTERN :: The pattern stores a basic rhythm which is played when the Context cycle starts. By default the X axis toggles form the pattern but it can be changed to the Y axis. The pattern toggles can also store and play back numbers (see MESSAGES -> VARIABLES -> =).;
1 BURST :: The burst stores toggles fire at the end of the Context cycle. They way in which they are selected can be determined by the burst settings. By default the Y axis toggles form the burst but this can be changed.;
1 SETTING TOGGLES :: All toggles can be set manually using the mouse or automatically using internal messages (see INTERNAL MESSAGES). Toggles can also store floats (see GUI MANIPULATION -> TOGGLE FLOATS). Positive floats are used to connect Contexts instead of "physical" connections and negative floats are used for message variables (see MESSAGES -> VARIABLES -> =);
2 74;
0 WHICH VS. HOW MANY PROGRESSION RANDOMIZE WRAP PRESETS SAVE WHICH;
;
1 CABLE CONNECTIONS :: You can connect Contexts together to form networks using regular PD cable connections. The outlets are synched with the X axis toggles and will send a message at the right time. All inlets are identical. Inlets can be used to start a Context ("start" or "!" message) and to receive commands (see INTERNAL MESSAGES);
1 FLOAT CONNECTIONS :: A float connection is a "virtual" connection used in place of cable connections. It connects the toggle float (see GUI MANIPULATION -> USING TOGGLE FLOATS) with a Context ID number (see MORE -> ID). Float connections have three main avantages: 1. They are tidy. 2. They can be set using internal messages. 3. They do not register on the send messages.;
1 EXTERNAL CONNECTIONS :: All Contexts can send and receive messages through their ID numbers and tags (see MORE -> ID). Context number 3 will send sequenced messages to "c3-" and receive internal commands from "c3". Thus you can use regular send and receive objects to connect Context to other PD patches and objects.;
;
;
;
1 RECEIVING :: All Contexts receive messages through the receive channel "cx" where "x" is the Context ID number (see MORE -> ID). So if you send a message through object [send c13] it will be received by Context number 13. Received messages can either start a Context or be used for internal messaging (see INTERNAL MESSAGES).;
1 SENDING :: All Contexts send sequenced messages through the send chanel "cx-" where "x" is the Context ID number (see MORE -> ID). So you can receive the output of Context number 11 with the object [receive c11-];
1 TAGS :: You can assign additional send and receive channels using the tags (see MORE -> ID -> TAGS). Each tag creates one send and receive channel in the same way as the ID numbers. So a Context tagged "bass" will receive from [send bass] and send to [receive bass-].;
;
;
;
1 TIME CYCLE :: The number box on the top right determins the Context cycle and hence how long the pattern takes to play. It is measured in set in seconds. Negative numbers reverse the playback of the pattern. By default a Context cycle cannot be set to 0 seconds (see MORE -> SAFETY);
1 COEFFICIENT :: The coefficient sets a multiplier or divider on the duration specified in the number box. Use the coefficient number box to select the value and the box next to it to select the operation. IE: setting the coefficient to "60 * " will mean that the number box measures minutes. Setting it to "1 / " means that it measures fractions of a second ie. musical intervals.;
0 RANDOM TIMING RANDOM RESOLUTION ** ** ** **;
0 POSITIONAL TIMING POSITIONAL RESOLUTION POSITIONAL SCALE ** ** **;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
1 ID NUMBERS :: Each Context is assigned a unique ID number on creation. This is used for sending and receiving messages (see BASIC OPERATION -> RECEIVING MESSAGES). Generally it is a good idea to let Context keep track of its own ID numbers. However you can set them yourself in the properties menu. The "force" button allows two Contexts to possess the same ID number (not advised).;
1 TAGS :: You can assign a Context additional ID by giving it tags. Each tag creates a new end and receive channel for that Context (see BASIC OPERATION -> RECEIVING MESSAGES). A Context can have any number of tags and tags can be shared between Contexts. This is useful for creating groups ie. all Contexts with the tag "drums" will send their output to [receive drums-]. You can create and delete tags in the properties menu. Type it into the symbol box ad press Return to add. Type the name of an existing tag to delete.;
1 COLOURS :: You can set the color of a Context for keeping track of groups. Normal PD colour numbers are used: positives are presets and negatives are RGB.;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
1 WHICH VS. HOW MANY :: The burst settings are used to determine two variables: first HOW MANY toggles fire and then WHICH toggles fire. Both variables can be set manually in the number boxes or controlled systematically by the sliders.;
1 PROGRESSION :: This sets a linear progression to the number series so that a constant number is added each time the Context cycle ends (ie. +1 creates 1 2 3 4 ...). This can be used to determine WHICH toggles fire (ie. the first then the second...) or HOW MANY (ie. one then two...) The number series wraps back to 1 once it reaches its limit. Note that there is a difference between "+ 0" and "off". "off" fixes the middle point of the random variations while "+ 0" allows it to wander (the "drunken walk").;
1 RANDOMIZE :: This determines the degree of uncertainty in the toggle selection. The calculation is made according to Gaussian distribution with variable sigma (width). The far left represents sigma = 0 (definite) and the far right represents sigma = infinity (even distribution) with different degrees in between. The center point of the function is the last value to have been selected (unless the Progression is "off" in which case it is fixed).;
1 WRAP :: This determines whether the random variations wrap around the limit of the burst toggles. Suppose there were 4 toggles and the random function produces "5". The result would be "1" if wrap is on and "4" if it is off.;
1 PRESETS :: There are 3 presets for the burst settings: All (default) makes all burst toggles fire. Random makes one fire according to even distribution. Linear makes one fire according to a +1 linear progression.;
1 SAVE WHICH :: You can set which toggles fire in the "which" box by typing in a list of numbers (ie. "2 4 7"). Use the "save button" and these toggles will be remembered the next time Context is opened.;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
1 n0;
1 n9;
1 RANDOM TIMING :: The time cycle can be randomized. One less than the last value entered into the number box is taken as the maximum range. Zero time cycle is allowed.;
1 RANDOM RESOLUTION :: This sets the allowed intervals for random timings in units of 1/x. 1 (default) means that only integers are allowed. 2 means that halves are allowed etc.;
;
;
;
;
1 POSITIONAL TIMING :: This mode allows the time cycle to be determined by the Context's position on the canvas. The distance is calculated radially from the Context with the previous ID number (if it also has positional timing turned on) or from the 0 point of the canvas.;
1 POSITIONAL RESOLUTION :: This sets the allowed intervals for positional timings in units of 1/x. 1 (default) means that only integers are allowed. 2 means that halves are allowed etc.;
1 POSITIONAL SCALE :: This sets how much the position of the Context affects the timing. The lower the number the more sensitive it is to dragging.;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
